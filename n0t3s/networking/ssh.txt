[48;5;8m[24m cheat.sheets:ssh [24m[0m
[38;5;246;03m# ssh[39;00m
[38;5;246;03m# OpenSSH SSH client (remote login program)[39;00m

[38;5;246;03m# SSH in via PEM file, which normally needs 0600 permissions.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252m/path/to/file.pem[39m[38;5;252m [39m[38;5;252muser@example.com[39m

[38;5;246;03m# Connect through a non-standard port. It's recommended not to use the default[39;00m
[38;5;246;03m# port of 22, as it is so often targeted, due to it being so commonplace.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-p[39m[38;5;252m [39m[38;5;67m2222[39m[38;5;252m [39m[38;5;252muser@example.com[39m

[38;5;246;03m# Connect and forward the authentication agent.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-A[39m[38;5;252m [39m[38;5;252muser@example.com[39m

[38;5;246;03m# Execute a command on a remote server.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-t[39m[38;5;252m [39m[38;5;252muser@example.com[39m[38;5;252m [39m[38;5;214m'the-remote-command'[39m

[38;5;246;03m# Tunnel an X session over SSH, via X11 Forwarding.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-X[39m[38;5;252m [39m[38;5;252muser@example.com[39m

[38;5;246;03m# Redirect traffic with a tunnel between local host (port 8080) and a remote[39;00m
[38;5;246;03m# host (remote.example.com:5000) through a proxy (personal.server.com).[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-f[39m[38;5;252m [39m[38;5;252m-L[39m[38;5;252m [39m[38;5;67m8080[39m[38;5;252m:remote.example.com:5000[39m[38;5;252m [39m[38;5;252muser@personal.server.com[39m[38;5;252m [39m[38;5;252m-N[39m

[38;5;246;03m# Launch a specific X application over SSH.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-X[39m[38;5;252m [39m[38;5;252m-t[39m[38;5;252m [39m[38;5;252muser@example.com[39m[38;5;252m [39m[38;5;214m'chromium-browser'[39m

[38;5;246;03m# Create a SOCKS proxy on localhost and port 9999.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-D[39m[38;5;252m [39m[38;5;67m9999[39m[38;5;252m [39m[38;5;252muser@example.com[39m

[38;5;246;03m# Connect to server, but allow for X11 forwarding, while also using Gzip[39;00m
[38;5;246;03m# compression (can be much faster; YMMV), and using the `blowfish` encryption.[39;00m
[38;5;246;03m# For more information, see: http://unix.stackexchange.com/q/12755/44856[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-XCc[39m[38;5;252m [39m[38;5;252mblowfish[39m[38;5;252m [39m[38;5;252muser@example.com[39m

[38;5;246;03m# Copy files and directories, via SSH, from remote host to the current working[39;00m
[38;5;246;03m# directory, with Gzip compression. An option for when `rsync` isn't available.[39;00m
[38;5;246;03m#[39;00m
[38;5;246;03m# This works by creating (not temporary!) a remote Tar archive, then piping its[39;00m
[38;5;246;03m# output to a local Tar process, which then extracts it to STDOUT.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252muser@example.com[39m[38;5;252m [39m[38;5;214m'tar -C /var/www/Shared/ zcf - asset1 asset2'[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mtar[39m[38;5;252m [39m[38;5;252mzxf[39m[38;5;252m [39m[38;5;252m-[39m

[38;5;246;03m# Explicitly specify a key for connection. Useful if you have too many[39;00m
[38;5;246;03m# authentication failures for a given username.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252msome_id_rsa[39m[38;5;252m [39m[38;5;252m-o[39m[38;5;252m [39m[38;5;87mIdentitiesOnly[39m[38;5;252m=[39m[38;5;252myes[39m[38;5;252m [39m[38;5;252mthem@there:/path/[39m

[38;5;246;03m# Temporarily disable `pubkey` authentication for this instance.[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-o[39m[38;5;252m [39m[38;5;87mPubkeyAuthentication[39m[38;5;252m=[39m[38;5;252mno[39m[38;5;252m [39m[38;5;252musername@hostname.com[39m

[38;5;246;03m# Mount a remote directory or filesystem, through SSH, to a local mount point.[39;00m
[38;5;246;03m# Install SSHFS from: https://github.com/libfuse/sshfs[39;00m
[38;5;252msshfs[39m[38;5;252m [39m[38;5;252mname@server:/path/to/folder[39m[38;5;252m [39m[38;5;252m/path/to/mount/point[39m

[38;5;246;03m# EMACS can read files through SSH. Below, is a link to related documentation.[39;00m
[38;5;246;03m#[39;00m
[38;5;246;03m#   http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html[39;00m
[38;5;246;03m#[39;00m
[38;5;252memacs[39m[38;5;252m [39m[38;5;252m/ssh:name@server:/path/to/file[39m

[38;5;246;03m# Get help for SSH escape sequences. Useful for terminating unresponsive[39;00m
[38;5;246;03m# sessions. The default escape character is ~ (tilde), escapes are only[39;00m
[38;5;246;03m# recognized immediately after a newline.[39;00m
[38;5;252m$[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252mEnter>~?[39m

[48;5;8m[24m cheat:ssh [24m[0m
[38;5;252m---[39m
[38;5;252mtags:[39m[38;5;252m [39m[38;5;252m[[39m[38;5;252m [39m[38;5;252mssh[39m[38;5;252m [39m[38;5;252m][39m
[38;5;252m---[39m
[38;5;246;03m# To ssh via pem file (which normally needs 0600 permissions):[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252mpemfile>[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m

[38;5;246;03m# To connect on a non-standard port:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-p[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252mport>[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m

[38;5;246;03m# To connect and forward the authentication agent:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-A[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m

[38;5;246;03m# To execute a command on a remote server:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-t[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m[38;5;252m [39m[38;5;214m'the-remote-command'[39m

[38;5;246;03m# To connect to a host with a specific key exchange algorithm:[39;00m
[38;5;246;03m# Full list of available algorithms : man ssh_config[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-oKeXAlgorithms[39m[38;5;252m=[39m[38;5;252m+diffie-hellman-group-exchange-sha1[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mserver>[39m

[38;5;246;03m# To tunnel an x session over SSH:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-X[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m

[38;5;246;03m# Redirect traffic with a tunnel between local host (port 8080) and a remote[39;00m
[38;5;246;03m# host (remote.example.com:5000) through a proxy (personal.server.com):[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-f[39m[38;5;252m [39m[38;5;252m-L[39m[38;5;252m [39m[38;5;67m8080[39m[38;5;252m:remote.example.com:5000[39m[38;5;252m [39m[38;5;252muser@personal.server.com[39m[38;5;252m [39m[38;5;252m-N[39m

[38;5;246;03m# To launch a specific x application over SSH:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-X[39m[38;5;252m [39m[38;5;252m-t[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m[38;5;252m [39m[38;5;214m'chromium-browser'[39m

[38;5;246;03m# To create a SOCKS proxy on localhost and <port>:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-qND[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252mport>[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m

[38;5;246;03m# To tunnel an ssh session over the SOCKS proxy on localhost and port 9999:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-o[39m[38;5;252m [39m[38;5;214m"ProxyCommand nc -x 127.0.0.1:9999 -X 4 %h %p"[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m

[38;5;246;03m# -X use an xsession, -C compress data, "-c blowfish" use the encryption blowfish:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m[38;5;252m [39m[38;5;252m-C[39m[38;5;252m [39m[38;5;252m-c[39m[38;5;252m [39m[38;5;252mblowfish[39m[38;5;252m [39m[38;5;252m-X[39m

[38;5;246;03m# For more information, see:[39;00m
[38;5;246;03m# http://unix.stackexchange.com/q/12755/44856[39;00m

[38;5;246;03m# To copy files and folders through ssh from remote host to pwd with tar.gz[39;00m
[38;5;246;03m# compression when there is no rsync command available:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>[39m[38;5;252m [39m[38;5;214m"cd /var/www/Shared/; tar zcf - asset1 asset2"[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mtar[39m[38;5;252m [39m[38;5;252mzxf[39m[38;5;252m [39m[38;5;252m-[39m

[38;5;246;03m# To mount folder/filesystem through SSH[39;00m
[38;5;246;03m# Install SSHFS from https://github.com/libfuse/sshfs[39;00m
[38;5;246;03m# Will allow you to mount a folder securely over a network.[39;00m
[38;5;252msshfs[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>:/path/to/folder[39m[38;5;252m [39m[38;5;252m/path/to/mount/point[39m

[38;5;246;03m# Emacs can read file through SSH[39;00m
[38;5;246;03m# Doc: http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html[39;00m
[38;5;252memacs[39m[38;5;252m [39m[38;5;252m/ssh:[39m[38;5;252m<[39m[38;5;252muser>@[39m[38;5;252m<[39m[38;5;252mhost>:[39m[38;5;252m<[39m[38;5;252mfile>[39m

[48;5;8m[24m tldr:ssh [24m[0m
[38;5;246;03m# ssh[39;00m
[38;5;246;03m# Secure Shell is a protocol used to securely log onto remote systems.[39;00m
[38;5;246;03m# It can be used for logging or executing commands on a remote server.[39;00m
[38;5;246;03m# More information: <https://man.openbsd.org/ssh>.[39;00m

[38;5;246;03m# Connect to a remote server:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252musername@remote_host[39m

[38;5;246;03m# Connect to a remote server with a specific identity (private key):[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252mpath/to/key_file[39m[38;5;252m [39m[38;5;252musername@remote_host[39m

[38;5;246;03m# Connect to a remote server using a specific port:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252musername@remote_host[39m[38;5;252m [39m[38;5;252m-p[39m[38;5;252m [39m[38;5;67m2222[39m

[38;5;246;03m# Run a command on a remote server with a [t]ty allocation allowing interaction with the remote command:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252musername@remote_host[39m[38;5;252m [39m[38;5;252m-t[39m[38;5;252m [39m[38;5;31mcommand[39m[38;5;252m [39m[38;5;252mcommand_arguments[39m

[38;5;246;03m# SSH tunneling: Dynamic port forwarding (SOCKS proxy on `localhost:1080`):[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-D[39m[38;5;252m [39m[38;5;67m1080[39m[38;5;252m [39m[38;5;252musername@remote_host[39m

[38;5;246;03m# SSH tunneling: Forward a specific port (`localhost:9999` to `example.org:80`) along with disabling pseudo-[T]ty allocation and executio[N] of remote commands:[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-L[39m[38;5;252m [39m[38;5;67m9999[39m[38;5;252m:example.org:80[39m[38;5;252m [39m[38;5;252m-N[39m[38;5;252m [39m[38;5;252m-T[39m[38;5;252m [39m[38;5;252musername@remote_host[39m

[38;5;246;03m# SSH jumping: Connect through a jumphost to a remote server (Multiple jump hops may be specified separated by comma characters):[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-J[39m[38;5;252m [39m[38;5;252musername@jump_host[39m[38;5;252m [39m[38;5;252musername@remote_host[39m

[38;5;246;03m# Agent forwarding: Forward the authentication information to the remote machine (see `man ssh_config` for available options):[39;00m
[38;5;252mssh[39m[38;5;252m [39m[38;5;252m-A[39m[38;5;252m [39m[38;5;252musername@remote_host[39m

# Causes ssh to print its configuration after evaluating Host and Match blocks and exit.
ssh -G username@host -p <portnumber>
