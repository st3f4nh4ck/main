[48;5;8m[24m cheat:tcpdump [24m[0m
[38;5;246;03m# TCPDump is a packet analyzer. It allows the user to intercept and display TCP/IP[39;00m
[38;5;246;03m# and other packets being transmitted or received over a network. (cf Wikipedia).[39;00m
[38;5;246;03m# Note: 173.194.40.120 => google.com[39;00m

[38;5;246;03m# Intercepts all packets on eth0[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252meth0[39m

[38;5;246;03m# Intercepts all packets from/to 173.194.40.120[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252mhost[39m[38;5;252m [39m[38;5;67m173[39m[38;5;252m.194.40.120[39m

[38;5;246;03m# Intercepts all packets on all interfaces from / to 173.194.40.120 port 80[39;00m
[38;5;246;03m# -nn => Disables name resolution for IP addresses and port numbers.[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-nn[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252many[39m[38;5;252m [39m[38;5;252mhost[39m[38;5;252m [39m[38;5;67m173[39m[38;5;252m.194.40.120[39m[38;5;252m [39m[38;5;252mand[39m[38;5;252m [39m[38;5;252mport[39m[38;5;252m [39m[38;5;67m80[39m

[38;5;246;03m# Make a grep on tcpdump (ASCII)[39;00m
[38;5;246;03m# -A  => Show only ASCII in packets.[39;00m
[38;5;246;03m# -s snaplen => Capture only snaplen bytes of data from each packet.[39;00m
[38;5;246;03m#    By default, tcpdump captures 262144 bytes.[39;00m
[38;5;246;03m#    Packets truncated because of a limited snapshot are indicated in the[39;00m
[38;5;246;03m#    output with '[|protocol]'.[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252many[39m[38;5;252m [39m[38;5;252m-A[39m[38;5;252m [39m[38;5;252mhost[39m[38;5;252m [39m[38;5;67m173[39m[38;5;252m.194.40.120[39m[38;5;252m [39m[38;5;252mand[39m[38;5;252m [39m[38;5;252mport[39m[38;5;252m [39m[38;5;67m80[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mgrep[39m[38;5;252m [39m[38;5;214m'User-Agent'[39m

[38;5;246;03m# With ngrep[39;00m
[38;5;246;03m# -d eth0 => To force eth0 (else ngrep work on all interfaces)[39;00m
[38;5;246;03m# -s0 => force ngrep to look at the entire packet. (Default snaplen: 65536 bytes)[39;00m
[38;5;252mngrep[39m[38;5;252m [39m[38;5;214m'User-Agent'[39m[38;5;252m [39m[38;5;252mhost[39m[38;5;252m [39m[38;5;67m173[39m[38;5;252m.194.40.120[39m[38;5;252m [39m[38;5;252mand[39m[38;5;252m [39m[38;5;252mport[39m[38;5;252m [39m[38;5;67m80[39m

[38;5;246;03m# Intercepts all packets on all interfaces from / to 8.8.8.8 or 173.194.40.127 on port 80[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;214m'host ( 8.8.8.8 or 173.194.40.127 ) and port 80'[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252many[39m

[38;5;246;03m# Intercepts all packets SYN and FIN of each TCP session.[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;214m'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0'[39m

[38;5;246;03m# To display SYN and FIN packets of each TCP session to a host that is not on our network[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;214m'tcp[tcpflags] & (tcp-syn|tcp-fin) != 0 and not src and dst net local_addr'[39m

[38;5;246;03m# To display all IPv4 HTTP packets that come or arrive on port 80 and that contain only data (no SYN, FIN no, no packet containing an ACK)[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;214m'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)'[39m

[38;5;246;03m# Saving captured data[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-w[39m[38;5;252m [39m[38;5;252mfile.cap[39m

[38;5;246;03m# Reading from capture file[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-r[39m[38;5;252m [39m[38;5;252mfile.cap[39m

[38;5;246;03m# Show content in hexa[39;00m
[38;5;246;03m# Change -x to -xx => show extra header (ethernet).[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-x[39m

[38;5;246;03m# Show content in hexa and ASCII[39;00m
[38;5;246;03m# Change -X to -XX => show extra header (ethernet).[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-X[39m

[38;5;246;03m# Note on packet maching:[39;00m
[38;5;246;03m# Port matching:[39;00m
[38;5;246;03m# - portrange 22-23[39;00m
[38;5;246;03m# - not port 22[39;00m
[38;5;246;03m# - port ssh[39;00m
[38;5;246;03m# - dst port 22[39;00m
[38;5;246;03m# - src port 22[39;00m
[38;5;246;03m#[39;00m
[38;5;246;03m# Host matching:[39;00m
[38;5;246;03m# - dst host 8.8.8.8[39;00m
[38;5;246;03m# - not dst host 8.8.8.8[39;00m
[38;5;246;03m# - src net 67.207.148.0 mask 255.255.255.0[39;00m
[38;5;246;03m# - src net 67.207.148.0/24[39;00m

[48;5;8m[24m tldr:tcpdump [24m[0m
[38;5;246;03m# tcpdump[39;00m
[38;5;246;03m# Dump traffic on a network.[39;00m
[38;5;246;03m# More information: <https://www.tcpdump.org>.[39;00m

[38;5;246;03m# List available network interfaces:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-D[39m

[38;5;246;03m# Capture the traffic of a specific interface:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252meth0[39m

[38;5;246;03m# Capture all TCP traffic showing contents (ASCII) in console:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-A[39m[38;5;252m [39m[38;5;252mtcp[39m

[38;5;246;03m# Capture the traffic from or to a host:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252mhost[39m[38;5;252m [39m[38;5;252mwww.example.com[39m

[38;5;246;03m# Capture the traffic from a specific interface, source, destination and destination port:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;252meth0[39m[38;5;252m [39m[38;5;252msrc[39m[38;5;252m [39m[38;5;67m192[39m[38;5;252m.168.1.1[39m[38;5;252m [39m[38;5;252mand[39m[38;5;252m [39m[38;5;252mdst[39m[38;5;252m [39m[38;5;67m192[39m[38;5;252m.168.1.2[39m[38;5;252m [39m[38;5;252mand[39m[38;5;252m [39m[38;5;252mdst[39m[38;5;252m [39m[38;5;252mport[39m[38;5;252m [39m[38;5;67m80[39m

[38;5;246;03m# Capture the traffic of a network:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252mnet[39m[38;5;252m [39m[38;5;67m192[39m[38;5;252m.168.1.0/24[39m

[38;5;246;03m# Capture all traffic except traffic over port 22 and save to a dump file:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-w[39m[38;5;252m [39m[38;5;252mdumpfile.pcap[39m[38;5;252m [39m[38;5;252mport[39m[38;5;252m [39m[38;5;252mnot[39m[38;5;252m [39m[38;5;67m22[39m

[38;5;246;03m# Read from a given dump file:[39;00m
[38;5;252mtcpdump[39m[38;5;252m [39m[38;5;252m-r[39m[38;5;252m [39m[38;5;252mdumpfile.pcap[39m

Combining Filters

Tcpdump enables us to use filters together using a logical AND (&&) or a logical OR (||). So, if we
wanted to filter for a particular IP address and TCP port 80 we would create a filter such as:
> tcpdump host 192.168.0.114 and port 80

We can also use a logical OR, such as:
> tcpdump port 80 or port 443

If we want to see all the traffic except that traveling from a particular IP address, we can use the negation
symbol (!) or not.
> tcpdump not host 192.168.0.114

Filtering for Passwords and Identifying Artifacts
To filter for passwords in cleartext, we could build a filter for various ports and then use egrep to search
for strings indicating logins or passwords.
> tcpdump port 80 or port 21 or port 25 or port 110 or port 143 or port 23 â€“lA | egrep â€“i B5
â€˜pass=|pwd=|log=|login=|user=|username=|pw=|passw=|password=â€™

Finally, if you want to filter for just the user agent (an identifying signature of the user and their browser)
we could create a filter such as:
> tcpdump â€“vvAls | grep â€˜User-Agentâ€™

Finally, to filter for just the browser cookies, we can create the following filter.
> tcpdump â€“vvAls | grep â€˜Set-Cookie|Host|Cookie:â€™
