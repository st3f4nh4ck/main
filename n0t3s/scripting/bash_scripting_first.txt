[38;5;246;03m#!/usr/bin/env bash[39;00m
[38;5;246;03m# First line of the script is the shebang which tells the system how to execute[39;00m
[38;5;246;03m# the script: https://en.wikipedia.org/wiki/Shebang_(Unix)[39;00m
[38;5;246;03m# As you already figured, comments start with #. Shebang is also a comment.[39;00m

[38;5;246;03m# Simple hello world example:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Hello world!"[39m[38;5;252m [39m[38;5;246;03m# => Hello world![39;00m

[38;5;246;03m# Each command starts on a new line, or after a semicolon:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"This is the first command"[39m[38;5;252m;[39m[38;5;252m [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"This is the second command"[39m
[38;5;246;03m# => This is the first command[39;00m
[38;5;246;03m# => This is the second command[39;00m

[38;5;246;03m# Declaring a variable looks like this:[39;00m
[38;5;87mvariable[39m[38;5;252m=[39m[38;5;214m"Some string"[39m

[38;5;246;03m# But not like this:[39;00m
[38;5;87mvariable[39m[38;5;252m [39m[38;5;252m=[39m[38;5;252m [39m[38;5;214m"Some string"[39m[38;5;252m [39m[38;5;246;03m# => returns error "variable: command not found"[39;00m
[38;5;246;03m# Bash will decide that `variable` is a command it must execute and give an error[39;00m
[38;5;246;03m# because it can't be found.[39;00m

[38;5;246;03m# Nor like this:[39;00m
[38;5;87mvariable[39m[38;5;252m=[39m[38;5;252m [39m[38;5;214m"Some string"[39m[38;5;252m [39m[38;5;246;03m# => returns error: "Some string: command not found"[39;00m
[38;5;246;03m# Bash will decide that "Some string" is a command it must execute and give an[39;00m
[38;5;246;03m# error because it can't be found. In this case the "variable=" part is seen[39;00m
[38;5;246;03m# as a variable assignment valid only for the scope of the "Some string"[39;00m
[38;5;246;03m# command.[39;00m

[38;5;246;03m# Using the variable:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$variable[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => Some string[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m'$variable'[39m[38;5;252m [39m[38;5;246;03m# => $variable[39;00m
[38;5;246;03m# When you use a variable itself â€” assign it, export it, or else â€” you write[39;00m
[38;5;246;03m# its name without $. If you want to use the variable's value, you should use $.[39;00m
[38;5;246;03m# Note that ' (single quote) won't expand the variables![39;00m
[38;5;246;03m# You can write variable without surrounding quotes but it's not recommended.[39;00m

[38;5;246;03m# Parameter expansion ${...}:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87mvariable[39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => Some string[39;00m
[38;5;246;03m# This is a simple usage of parameter expansion such as two examples above.[39;00m
[38;5;246;03m# Parameter expansion gets a value from a variable.[39;00m
[38;5;246;03m# It "expands" or prints the value.[39;00m
[38;5;246;03m# During the expansion time the value or parameter can be modified.[39;00m
[38;5;246;03m# Below are other modifications that add onto this expansion.[39;00m

[38;5;246;03m# String substitution in variables:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87mvariable[39m[38;5;252m/Some/A[39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => A string[39;00m
[38;5;246;03m# This will substitute the first occurrence of "Some" with "A".[39;00m

[38;5;246;03m# Substring from a variable:[39;00m
[38;5;87mlength[39m[38;5;252m=[39m[38;5;67m7[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87mvariable[39m[38;5;252m:[39m[38;5;87m0[39m[38;5;252m:[39m[38;5;87mlength[39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => Some st[39;00m
[38;5;246;03m# This will return only the first 7 characters of the value[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87mvariable[39m[38;5;252m:[39m[38;5;252m -5[39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => tring[39;00m
[38;5;246;03m# This will return the last 5 characters (note the space before -5).[39;00m
[38;5;246;03m# The space before minus is mandatory here.[39;00m

[38;5;246;03m# String length:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${#[39m[38;5;87mvariable[39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => 11[39;00m

[38;5;246;03m# Indirect expansion:[39;00m
[38;5;87mother_variable[39m[38;5;252m=[39m[38;5;214m"variable"[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m${[39m[38;5;252m!other_variable[39m[38;5;214m}[39m[38;5;252m [39m[38;5;246;03m# => Some string[39;00m
[38;5;246;03m# This will expand the value of `other_variable`.[39;00m

[38;5;246;03m# The default value for variable:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87mfoo[39m[38;5;70;01m:-[39;00m[38;5;214m"DefaultValueIfFooIsMissingOrEmpty"[39m[38;5;214m}[39m[38;5;214m"[39m
[38;5;246;03m# => DefaultValueIfFooIsMissingOrEmpty[39;00m
[38;5;246;03m# This works for null (foo=) and empty string (foo=""); zero (foo=0) returns 0.[39;00m
[38;5;246;03m# Note that it only returns default value and doesn't change variable value.[39;00m

[38;5;246;03m# Declare an array with 6 elements:[39;00m
[38;5;87marray[39m[38;5;252m=[39m[38;5;252m([39m[38;5;252mone[39m[38;5;252m [39m[38;5;252mtwo[39m[38;5;252m [39m[38;5;252mthree[39m[38;5;252m [39m[38;5;252mfour[39m[38;5;252m [39m[38;5;252mfive[39m[38;5;252m [39m[38;5;252msix[39m[38;5;252m)[39m
[38;5;246;03m# Print the first element:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87marray[39m[38;5;252m[0][39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => "one"[39;00m
[38;5;246;03m# Print all elements:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87marray[39m[38;5;252m[@][39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => "one two three four five six"[39;00m
[38;5;246;03m# Print the number of elements:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${#[39m[38;5;87marray[39m[38;5;252m[@][39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => "6"[39;00m
[38;5;246;03m# Print the number of characters in third element[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${#[39m[38;5;87marray[39m[38;5;252m[2][39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => "5"[39;00m
[38;5;246;03m# Print 2 elements starting from fourth:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87marray[39m[38;5;252m[@][39m[38;5;252m:[39m[38;5;87m3[39m[38;5;252m:[39m[38;5;87m2[39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# => "four five"[39;00m
[38;5;246;03m# Print all elements each of them on new line.[39;00m
[38;5;70;01mfor[39;00m[38;5;252m [39m[38;5;252mitem[39m[38;5;252m [39m[38;5;252min[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m${[39m[38;5;87marray[39m[38;5;252m[@][39m[38;5;214m}[39m[38;5;214m"[39m[38;5;252m;[39m[38;5;252m [39m[38;5;70;01mdo[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$item[39m[38;5;214m"[39m
[38;5;70;01mdone[39;00m

[38;5;246;03m# Built-in variables:[39;00m
[38;5;246;03m# There are some useful built-in variables, like:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mLast program's return value: [39m[38;5;87m$?[39m[38;5;214m"[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mScript's PID: [39m[38;5;87m$$[39m[38;5;214m"[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mNumber of arguments passed to script: [39m[38;5;87m$#[39m[38;5;214m"[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mAll arguments passed to script: [39m[38;5;87m$@[39m[38;5;214m"[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mScript's arguments separated into different variables: [39m[38;5;87m$1[39m[38;5;214m [39m[38;5;87m$2[39m[38;5;214m...[39m[38;5;214m"[39m

[38;5;246;03m# Brace Expansion {...}[39;00m
[38;5;246;03m# used to generate arbitrary strings:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;252m{[39m[38;5;67m1[39m[38;5;252m..10[39m[38;5;252m}[39m[38;5;252m [39m[38;5;246;03m# => 1 2 3 4 5 6 7 8 9 10[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;252m{[39m[38;5;252ma..z[39m[38;5;252m}[39m[38;5;252m [39m[38;5;246;03m# => a b c d e f g h i j k l m n o p q r s t u v w x y z[39;00m
[38;5;246;03m# This will output the range from the start value to the end value.[39;00m
[38;5;246;03m# Note that you can't use variables here:[39;00m
[38;5;87mfrom[39m[38;5;252m=[39m[38;5;67m1[39m
[38;5;87mto[39m[38;5;252m=[39m[38;5;67m10[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;252m{[39m[38;5;87m$from[39m[38;5;252m..[39m[38;5;87m$to[39m[38;5;252m}[39m[38;5;252m [39m[38;5;246;03m# => {$from..$to}[39;00m

[38;5;246;03m# Now that we know how to echo and use variables,[39;00m
[38;5;246;03m# let's learn some of the other basics of Bash![39;00m

[38;5;246;03m# Our current directory is available through the command `pwd`.[39;00m
[38;5;246;03m# `pwd` stands for "print working directory".[39;00m
[38;5;246;03m# We can also use the built-in variable `$PWD`.[39;00m
[38;5;246;03m# Observe that the following are equivalent:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mI'm in [39m[38;5;70;01m$([39;00m[38;5;31mpwd[39m[38;5;70;01m)[39;00m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# execs `pwd` and interpolates output[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mI'm in [39m[38;5;87m$PWD[39m[38;5;214m"[39m[38;5;252m [39m[38;5;246;03m# interpolates the variable[39;00m

[38;5;246;03m# If you get too much output in your terminal, or from a script, the command[39;00m
[38;5;246;03m# `clear` clears your screen:[39;00m
[38;5;252mclear[39m
[38;5;246;03m# Ctrl-L also works for clearing output.[39;00m

[38;5;246;03m# Reading a value from input:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"What's your name?"[39m
[38;5;31mread[39m[38;5;252m [39m[38;5;252mname[39m
[38;5;246;03m# Note that we didn't need to declare a new variable.[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mHello, [39m[38;5;87m$name[39m[38;5;214m![39m[38;5;214m"[39m

[38;5;246;03m# We have the usual if structure.[39;00m
[38;5;246;03m# Condition is true if the value of $name is not equal to the current user's login username:[39;00m
[38;5;70;01mif[39;00m[38;5;252m [39m[38;5;252m[[39m[38;5;252m[[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$name[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252m![39m[38;5;252m=[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$USER[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252m][39m[38;5;252m][39m[38;5;252m;[39m[38;5;252m [39m[38;5;70;01mthen[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Your name isn't your username"[39m
[38;5;70;01melse[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Your name is your username"[39m
[38;5;70;01mfi[39;00m

[38;5;246;03m# To use && and || with if statements, you need multiple pairs of square brackets:[39;00m
[38;5;31mread[39m[38;5;252m [39m[38;5;252mage[39m
[38;5;70;01mif[39;00m[38;5;252m [39m[38;5;252m[[39m[38;5;252m[[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$name[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252m=[39m[38;5;252m=[39m[38;5;252m [39m[38;5;214m"Steve"[39m[38;5;252m [39m[38;5;252m][39m[38;5;252m][39m[38;5;252m [39m[38;5;252m&&[39m[38;5;252m [39m[38;5;252m[[39m[38;5;252m[[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$age[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252m-eq[39m[38;5;252m [39m[38;5;67m15[39m[38;5;252m [39m[38;5;252m][39m[38;5;252m][39m[38;5;252m;[39m[38;5;252m [39m[38;5;70;01mthen[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mThis will run if [39m[38;5;87m$name[39m[38;5;214m is Steve AND [39m[38;5;87m$age[39m[38;5;214m is 15.[39m[38;5;214m"[39m
[38;5;70;01mfi[39;00m

[38;5;70;01mif[39;00m[38;5;252m [39m[38;5;252m[[39m[38;5;252m[[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$name[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252m=[39m[38;5;252m=[39m[38;5;252m [39m[38;5;214m"Daniya"[39m[38;5;252m [39m[38;5;252m][39m[38;5;252m][39m[38;5;252m [39m[38;5;252m||[39m[38;5;252m [39m[38;5;252m[[39m[38;5;252m[[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$name[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252m=[39m[38;5;252m=[39m[38;5;252m [39m[38;5;214m"Zach"[39m[38;5;252m [39m[38;5;252m][39m[38;5;252m][39m[38;5;252m;[39m[38;5;252m [39m[38;5;70;01mthen[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mThis will run if [39m[38;5;87m$name[39m[38;5;214m is Daniya OR Zach.[39m[38;5;214m"[39m
[38;5;70;01mfi[39;00m
[38;5;246;03m# There are other comparison operators for numbers listed below:[39;00m
[38;5;246;03m# -ne - not equal[39;00m
[38;5;246;03m# -lt - less than[39;00m
[38;5;246;03m# -gt - greater than[39;00m
[38;5;246;03m# -le - less than or equal to[39;00m
[38;5;246;03m# -ge - greater than or equal to[39;00m

[38;5;246;03m# There is also the `=~` operator, which tests a string against the Regex pattern:[39;00m
[38;5;87memail[39m[38;5;252m=[39m[38;5;252mme@example.com[39m
[38;5;70;01mif[39;00m[38;5;252m [39m[38;5;252m[[39m[38;5;252m[[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$email[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252m=[39m[38;5;252m~[39m[38;5;252m [39m[38;5;252m[[39m[38;5;252ma-z[39m[38;5;252m][39m[38;5;252m+@[39m[38;5;252m[[39m[38;5;252ma-z[39m[38;5;252m][39m[38;5;252m{[39m[38;5;67m2[39m[38;5;252m,[39m[38;5;252m}[39m[38;5;214m\.[39m[38;5;252m([39m[38;5;252mcom[39m[38;5;252m|[39m[38;5;252mnet[39m[38;5;252m|[39m[38;5;252morg[39m[38;5;252m)[39m[38;5;252m [39m[38;5;252m][39m[38;5;252m][39m
[38;5;70;01mthen[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Valid email!"[39m
[38;5;70;01mfi[39;00m

[38;5;246;03m# There is also conditional execution[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Always executed"[39m[38;5;252m [39m[38;5;252m||[39m[38;5;252m [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Only executed if first command fails"[39m
[38;5;246;03m# => Always executed[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Always executed"[39m[38;5;252m [39m[38;5;252m&&[39m[38;5;252m [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Only executed if first command does NOT fail"[39m
[38;5;246;03m# => Always executed[39;00m
[38;5;246;03m# => Only executed if first command does NOT fail[39;00m

[38;5;246;03m# A single ampersand & after a command runs it in the background. A background command's[39;00m
[38;5;246;03m# output is printed to the terminal, but it cannot read from the input.[39;00m
[38;5;252msleep[39m[38;5;252m [39m[38;5;67m30[39m[38;5;252m [39m[38;5;252m&[39m
[38;5;246;03m# List background jobs[39;00m
[38;5;31mjobs[39m[38;5;252m [39m[38;5;246;03m# => [1]+  Running                 sleep 30 &[39;00m
[38;5;246;03m# Bring the background job to the foreground[39;00m
[38;5;31mfg[39m
[38;5;246;03m# Ctrl-C to kill the process, or Ctrl-Z to pause it[39;00m
[38;5;246;03m# Resume a background process after it has been paused with Ctrl-Z[39;00m
[38;5;31mbg[39m
[38;5;246;03m# Kill job number 2[39;00m
[38;5;31mkill[39m[38;5;252m [39m[38;5;252m%2[39m
[38;5;246;03m# %1, %2, etc. can be used for fg and bg as well[39;00m

[38;5;246;03m# Redefine command `ping` as alias to send only 5 packets[39;00m
[38;5;31malias[39m[38;5;252m [39m[38;5;87mping[39m[38;5;252m=[39m[38;5;214m'ping -c 5'[39m
[38;5;246;03m# Escape the alias and use command with this name instead[39;00m
[38;5;214m\p[39m[38;5;252ming[39m[38;5;252m [39m[38;5;67m192[39m[38;5;252m.168.1.1[39m
[38;5;246;03m# Print all aliases[39;00m
[38;5;31malias[39m[38;5;252m [39m[38;5;252m-p[39m

[38;5;246;03m# Expressions are denoted with the following format:[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;70;01m$(([39;00m[38;5;252m [39m[38;5;67m10[39m[38;5;252m [39m[38;5;252m+[39m[38;5;252m [39m[38;5;67m5[39m[38;5;252m [39m[38;5;70;01m))[39;00m[38;5;252m [39m[38;5;246;03m# => 15[39;00m

[38;5;246;03m# Unlike other programming languages, bash is a shell so it works in the context[39;00m
[38;5;246;03m# of a current directory. You can list files and directories in the current[39;00m
[38;5;246;03m# directory with the ls command:[39;00m
[38;5;252mls[39m[38;5;252m [39m[38;5;246;03m# Lists the files and subdirectories contained in the current directory[39;00m

[38;5;246;03m# This command has options that control its execution:[39;00m
[38;5;252mls[39m[38;5;252m [39m[38;5;252m-l[39m[38;5;252m [39m[38;5;246;03m# Lists every file and directory on a separate line[39;00m
[38;5;252mls[39m[38;5;252m [39m[38;5;252m-t[39m[38;5;252m [39m[38;5;246;03m# Sorts the directory contents by last-modified date (descending)[39;00m
[38;5;252mls[39m[38;5;252m [39m[38;5;252m-R[39m[38;5;252m [39m[38;5;246;03m# Recursively `ls` this directory and all of its subdirectories[39;00m

[38;5;246;03m# Results (stdout) of the previous command can be passed as input (stdin) to the next command[39;00m
[38;5;246;03m# using a pipe |. Commands chained in this way are called a "pipeline", and are run concurrently.[39;00m
[38;5;246;03m# The `grep` command filters the input with provided patterns.[39;00m
[38;5;246;03m# That's how we can list .txt files in the current directory:[39;00m
[38;5;252mls[39m[38;5;252m [39m[38;5;252m-l[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mgrep[39m[38;5;252m [39m[38;5;214m"\.txt"[39m

[38;5;246;03m# Use `cat` to print files to stdout:[39;00m
[38;5;252mcat[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# We can also read the file using `cat`:[39;00m
[38;5;87mContents[39m[38;5;252m=[39m[38;5;70;01m$([39;00m[38;5;252mcat[39m[38;5;252m [39m[38;5;252mfile.txt[39m[38;5;70;01m)[39;00m
[38;5;246;03m# "\n" prints a new line character[39;00m
[38;5;246;03m# "-e" to interpret the newline escape characters as escape characters[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;252m-e[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mSTART OF FILE\n[39m[38;5;87m$Contents[39m[38;5;214m\nEND OF FILE[39m[38;5;214m"[39m
[38;5;246;03m# => START OF FILE[39;00m
[38;5;246;03m# => [contents of file.txt][39;00m
[38;5;246;03m# => END OF FILE[39;00m

[38;5;246;03m# Use `cp` to copy files or directories from one place to another.[39;00m
[38;5;246;03m# `cp` creates NEW versions of the sources,[39;00m
[38;5;246;03m# so editing the copy won't affect the original (and vice versa).[39;00m
[38;5;246;03m# Note that it will overwrite the destination if it already exists.[39;00m
[38;5;252mcp[39m[38;5;252m [39m[38;5;252msrcFile.txt[39m[38;5;252m [39m[38;5;252mclone.txt[39m
[38;5;252mcp[39m[38;5;252m [39m[38;5;252m-r[39m[38;5;252m [39m[38;5;252msrcDirectory/[39m[38;5;252m [39m[38;5;252mdst/[39m[38;5;252m [39m[38;5;246;03m# recursively copy[39;00m

[38;5;246;03m# Look into `scp` or `sftp` if you plan on exchanging files between computers.[39;00m
[38;5;246;03m# `scp` behaves very similarly to `cp`.[39;00m
[38;5;246;03m# `sftp` is more interactive.[39;00m

[38;5;246;03m# Use `mv` to move files or directories from one place to another.[39;00m
[38;5;246;03m# `mv` is similar to `cp`, but it deletes the source.[39;00m
[38;5;246;03m# `mv` is also useful for renaming files![39;00m
[38;5;252mmv[39m[38;5;252m [39m[38;5;252ms0urc3.txt[39m[38;5;252m [39m[38;5;252mdst.txt[39m[38;5;252m [39m[38;5;246;03m# sorry, l33t hackers...[39;00m

[38;5;246;03m# Since bash works in the context of a current directory, you might want to[39;00m
[38;5;246;03m# run your command in some other directory. We have cd for changing location:[39;00m
[38;5;31mcd[39m[38;5;252m [39m[38;5;252m~[39m[38;5;252m    [39m[38;5;246;03m# change to home directory[39;00m
[38;5;31mcd[39m[38;5;252m      [39m[38;5;246;03m# also goes to home directory[39;00m
[38;5;31mcd[39m[38;5;252m [39m[38;5;252m..[39m[38;5;252m   [39m[38;5;246;03m# go up one directory[39;00m
[38;5;252m        [39m[38;5;246;03m# (^^say, from /home/username/Downloads to /home/username)[39;00m
[38;5;31mcd[39m[38;5;252m [39m[38;5;252m/home/username/Documents[39m[38;5;252m   [39m[38;5;246;03m# change to specified directory[39;00m
[38;5;31mcd[39m[38;5;252m [39m[38;5;252m~/Documents/..[39m[38;5;252m    [39m[38;5;246;03m# now in home directory (if ~/Documents exists)[39;00m
[38;5;31mcd[39m[38;5;252m [39m[38;5;252m-[39m[38;5;252m    [39m[38;5;246;03m# change to last directory[39;00m
[38;5;246;03m# => /home/username/Documents[39;00m

[38;5;246;03m# Use subshells to work across directories[39;00m
[38;5;252m([39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mFirst, I'm here: [39m[38;5;87m$PWD[39m[38;5;214m"[39m[38;5;252m)[39m[38;5;252m [39m[38;5;252m&&[39m[38;5;252m [39m[38;5;252m([39m[38;5;31mcd[39m[38;5;252m [39m[38;5;252msomeDir[39m[38;5;252m;[39m[38;5;252m [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mThen, I'm here: [39m[38;5;87m$PWD[39m[38;5;214m"[39m[38;5;252m)[39m
[38;5;31mpwd[39m[38;5;252m [39m[38;5;246;03m# still in first directory[39;00m

[38;5;246;03m# Use `mkdir` to create new directories.[39;00m
[38;5;252mmkdir[39m[38;5;252m [39m[38;5;252mmyNewDir[39m
[38;5;246;03m# The `-p` flag causes new intermediate directories to be created as necessary.[39;00m
[38;5;252mmkdir[39m[38;5;252m [39m[38;5;252m-p[39m[38;5;252m [39m[38;5;252mmyNewDir/with/intermediate/directories[39m
[38;5;246;03m# if the intermediate directories didn't already exist, running the above[39;00m
[38;5;246;03m# command without the `-p` flag would return an error[39;00m

[38;5;246;03m# You can redirect command input and output (stdin, stdout, and stderr)[39;00m
[38;5;246;03m# using "redirection operators". Unlike a pipe, which passes output to a command,[39;00m
[38;5;246;03m# a redirection operator has a command's input come from a file or stream, or[39;00m
[38;5;246;03m# sends its output to a file or stream.[39;00m

[38;5;246;03m# Read from stdin until ^EOF$ and overwrite hello.py with the lines[39;00m
[38;5;246;03m# between "EOF" (which are called a "here document"):[39;00m
[38;5;252mcat[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;252mhello.py[39m[38;5;252m [39m[38;5;214m<< EOF[39m
[38;5;214m#!/usr/bin/env python[39m
[38;5;214mfrom __future__ import print_function[39m
[38;5;214mimport sys[39m
[38;5;214mprint("#stdout", file=sys.stdout)[39m
[38;5;214mprint("#stderr", file=sys.stderr)[39m
[38;5;214mfor line in sys.stdin:[39m
[38;5;214m    print(line, file=sys.stdout)[39m
[38;5;214mEOF[39m
[38;5;246;03m# Variables will be expanded if the first "EOF" is not quoted[39;00m

[38;5;246;03m# Run the hello.py Python script with various stdin, stdout, and[39;00m
[38;5;246;03m# stderr redirections:[39;00m
[38;5;252mpython[39m[38;5;252m [39m[38;5;252mhello.py[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252m [39m[38;5;214m"input.in"[39m[38;5;252m [39m[38;5;246;03m# pass input.in as input to the script[39;00m

[38;5;252mpython[39m[38;5;252m [39m[38;5;252mhello.py[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;214m"output.out"[39m[38;5;252m [39m[38;5;246;03m# redirect output from the script to output.out[39;00m

[38;5;252mpython[39m[38;5;252m [39m[38;5;252mhello.py[39m[38;5;252m [39m[38;5;67m2[39m[38;5;252m>[39m[38;5;252m [39m[38;5;214m"error.err"[39m[38;5;252m [39m[38;5;246;03m# redirect error output to error.err[39;00m

[38;5;252mpython[39m[38;5;252m [39m[38;5;252mhello.py[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;214m"output-and-error.log"[39m[38;5;252m [39m[38;5;67m2[39m[38;5;252m>[39m[38;5;252m&[39m[38;5;67m1[39m
[38;5;246;03m# redirect both output and errors to output-and-error.log[39;00m
[38;5;246;03m# &1 means file descriptor 1 (stdout), so 2>&1 redirects stderr (2) to the current[39;00m
[38;5;246;03m# destination of stdout (1), which has been redirected to output-and-error.log.[39;00m

[38;5;252mpython[39m[38;5;252m [39m[38;5;252mhello.py[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;252m/dev/null[39m[38;5;252m [39m[38;5;67m2[39m[38;5;252m>[39m[38;5;252m&[39m[38;5;67m1[39m
[38;5;246;03m# redirect all output and errors to the black hole, /dev/null, i.e., no output[39;00m

[38;5;246;03m# The output error will overwrite the file if it exists,[39;00m
[38;5;246;03m# if you want to append instead, use ">>":[39;00m
[38;5;252mpython[39m[38;5;252m [39m[38;5;252mhello.py[39m[38;5;252m [39m[38;5;252m>>[39m[38;5;252m [39m[38;5;214m"output.out"[39m[38;5;252m [39m[38;5;67m2[39m[38;5;252m>>[39m[38;5;252m [39m[38;5;214m"error.err"[39m

[38;5;246;03m# Overwrite output.out, append to error.err, and count lines:[39;00m
[38;5;252minfo[39m[38;5;252m [39m[38;5;252mbash[39m[38;5;252m [39m[38;5;214m'Basic Shell Features'[39m[38;5;252m [39m[38;5;214m'Redirections'[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;252moutput.out[39m[38;5;252m [39m[38;5;67m2[39m[38;5;252m>>[39m[38;5;252m [39m[38;5;252merror.err[39m
[38;5;252mwc[39m[38;5;252m [39m[38;5;252m-l[39m[38;5;252m [39m[38;5;252moutput.out[39m[38;5;252m [39m[38;5;252merror.err[39m

[38;5;246;03m# Run a command and print its file descriptor (e.g. /dev/fd/123)[39;00m
[38;5;246;03m# see: man fd[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252m([39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"#helloworld"[39m[38;5;252m)[39m

[38;5;246;03m# Overwrite output.out with "#helloworld":[39;00m
[38;5;252mcat[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;252moutput.out[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252m([39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"#helloworld"[39m[38;5;252m)[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"#helloworld"[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;252moutput.out[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"#helloworld"[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mcat[39m[38;5;252m [39m[38;5;252m>[39m[38;5;252m [39m[38;5;252moutput.out[39m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"#helloworld"[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mtee[39m[38;5;252m [39m[38;5;252moutput.out[39m[38;5;252m [39m[38;5;252m>/dev/null[39m

[38;5;246;03m# Cleanup temporary files verbosely (add '-i' for interactive)[39;00m
[38;5;246;03m# WARNING: `rm` commands cannot be undone[39;00m
[38;5;252mrm[39m[38;5;252m [39m[38;5;252m-v[39m[38;5;252m [39m[38;5;252moutput.out[39m[38;5;252m [39m[38;5;252merror.err[39m[38;5;252m [39m[38;5;252moutput-and-error.log[39m
[38;5;252mrm[39m[38;5;252m [39m[38;5;252m-r[39m[38;5;252m [39m[38;5;252mtempDir/[39m[38;5;252m [39m[38;5;246;03m# recursively delete[39;00m
[38;5;246;03m# You can install the `trash-cli` Python package to have `trash`[39;00m
[38;5;246;03m#Â which puts files in the system trash and doesn't delete them directly[39;00m
[38;5;246;03m# see https://pypi.org/project/trash-cli/ if you want to be careful[39;00m

[38;5;246;03m# Commands can be substituted within other commands using $( ):[39;00m
[38;5;246;03m# The following command displays the number of files and directories in the[39;00m
[38;5;246;03m# current directory.[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mThere are [39m[38;5;70;01m$([39;00m[38;5;252mls[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mwc[39m[38;5;252m [39m[38;5;252m-l[39m[38;5;70;01m)[39;00m[38;5;214m items here.[39m[38;5;214m"[39m

[38;5;246;03m# The same can be done using backticks `` but they can't be nested -[39;00m
[38;5;246;03m# the preferred way is to use $( ).[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"There are `ls | wc -l` items here."[39m

[38;5;246;03m# Bash uses a `case` statement that works similarly to switch in Java and C++:[39;00m
[38;5;70;01mcase[39;00m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$Variable[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252min[39m
[38;5;252m    [39m[38;5;246;03m# List patterns for the conditions you want to meet[39;00m
[38;5;252m    [39m[38;5;67m0[39m[38;5;252m)[39m[38;5;252m [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"There is a zero."[39m[38;5;252m;[39m[38;5;252m;[39m
[38;5;252m    [39m[38;5;67m1[39m[38;5;252m)[39m[38;5;252m [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"There is a one."[39m[38;5;252m;[39m[38;5;252m;[39m
[38;5;252m    [39m[38;5;252m*[39m[38;5;252m)[39m[38;5;252m [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"It is not null."[39m[38;5;252m;[39m[38;5;252m;[39m[38;5;252m  [39m[38;5;246;03m#Â match everything[39;00m
[38;5;70;01mesac[39;00m

[38;5;246;03m# `for` loops iterate for as many arguments given:[39;00m
[38;5;246;03m# The contents of $Variable is printed three times.[39;00m
[38;5;70;01mfor[39;00m[38;5;252m [39m[38;5;252mVariable[39m[38;5;252m [39m[38;5;252min[39m[38;5;252m [39m[38;5;252m{[39m[38;5;67m1[39m[38;5;252m..3[39m[38;5;252m}[39m
[38;5;70;01mdo[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$Variable[39m[38;5;214m"[39m
[38;5;70;01mdone[39;00m
[38;5;246;03m# => 1[39;00m
[38;5;246;03m# => 2[39;00m
[38;5;246;03m# => 3[39;00m


[38;5;246;03m# Or write it the "traditional for loop" way:[39;00m
[38;5;70;01mfor[39;00m[38;5;252m [39m[38;5;252m([39m[38;5;252m([39m[38;5;87ma[39m[38;5;252m=[39m[38;5;67m1[39m[38;5;252m;[39m[38;5;252m [39m[38;5;252ma[39m[38;5;252m [39m[38;5;252m<[39m[38;5;252m=[39m[38;5;252m [39m[38;5;67m3[39m[38;5;252m;[39m[38;5;252m [39m[38;5;252ma++[39m[38;5;252m)[39m[38;5;252m)[39m
[38;5;70;01mdo[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;87m$a[39m
[38;5;70;01mdone[39;00m
[38;5;246;03m# => 1[39;00m
[38;5;246;03m# => 2[39;00m
[38;5;246;03m# => 3[39;00m

[38;5;246;03m# They can also be used to act on files..[39;00m
[38;5;246;03m# This will run the command `cat` on file1 and file2[39;00m
[38;5;70;01mfor[39;00m[38;5;252m [39m[38;5;252mVariable[39m[38;5;252m [39m[38;5;252min[39m[38;5;252m [39m[38;5;252mfile1[39m[38;5;252m [39m[38;5;252mfile2[39m
[38;5;70;01mdo[39;00m
[38;5;252m    [39m[38;5;252mcat[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$Variable[39m[38;5;214m"[39m
[38;5;70;01mdone[39;00m

[38;5;246;03m# ..or the output from a command[39;00m
[38;5;246;03m# This will `cat` the output from `ls`.[39;00m
[38;5;70;01mfor[39;00m[38;5;252m [39m[38;5;252mOutput[39m[38;5;252m [39m[38;5;252min[39m[38;5;252m [39m[38;5;70;01m$([39;00m[38;5;252mls[39m[38;5;70;01m)[39;00m
[38;5;70;01mdo[39;00m
[38;5;252m    [39m[38;5;252mcat[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$Output[39m[38;5;214m"[39m
[38;5;70;01mdone[39;00m

[38;5;246;03m# Bash can also accept patterns, like this to `cat`[39;00m
[38;5;246;03m# all the Markdown files in current directory[39;00m
[38;5;70;01mfor[39;00m[38;5;252m [39m[38;5;252mOutput[39m[38;5;252m [39m[38;5;252min[39m[38;5;252m [39m[38;5;252m./*.markdown[39m
[38;5;70;01mdo[39;00m
[38;5;252m    [39m[38;5;252mcat[39m[38;5;252m [39m[38;5;214m"[39m[38;5;87m$Output[39m[38;5;214m"[39m
[38;5;70;01mdone[39;00m

[38;5;246;03m# while loop:[39;00m
[38;5;70;01mwhile[39;00m[38;5;252m [39m[38;5;252m[[39m[38;5;252m [39m[38;5;31mtrue[39m[38;5;252m [39m[38;5;252m][39m
[38;5;70;01mdo[39;00m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"loop body here..."[39m
[38;5;252m    [39m[38;5;31mbreak[39m
[38;5;70;01mdone[39;00m
[38;5;246;03m# => loop body here...[39;00m

[38;5;246;03m# You can also define functions[39;00m
[38;5;246;03m# Definition:[39;00m
[38;5;70;01mfunction[39;00m[38;5;252m [39m[38;5;252mfoo[39m[38;5;252m [39m[38;5;252m([39m[38;5;252m)[39m
[38;5;252m{[39m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mArguments work just like script arguments: [39m[38;5;87m$@[39m[38;5;214m"[39m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mAnd: [39m[38;5;87m$1[39m[38;5;214m [39m[38;5;87m$2[39m[38;5;214m...[39m[38;5;214m"[39m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"This is a function"[39m
[38;5;252m    [39m[38;5;87mreturnValue[39m[38;5;252m=[39m[38;5;67m0[39m[38;5;252m    [39m[38;5;246;03m# Variable values can be returned[39;00m
[38;5;252m    [39m[38;5;70;01mreturn[39;00m[38;5;252m [39m[38;5;87m$returnValue[39m
[38;5;252m}[39m
[38;5;246;03m# Call the function `foo` with two arguments, arg1 and arg2:[39;00m
[38;5;252mfoo[39m[38;5;252m [39m[38;5;252marg1[39m[38;5;252m [39m[38;5;252marg2[39m
[38;5;246;03m# => Arguments work just like script arguments: arg1 arg2[39;00m
[38;5;246;03m# => And: arg1 arg2...[39;00m
[38;5;246;03m# => This is a function[39;00m
[38;5;246;03m# Return values can be obtained with $?[39;00m
[38;5;87mresultValue[39m[38;5;252m=[39m[38;5;87m$?[39m
[38;5;246;03m# More than 9 arguments are also possible by using braces, e.g. ${10}, ${11}, ...[39;00m

[38;5;246;03m# or simply[39;00m
[38;5;252mbar[39m[38;5;252m [39m[38;5;252m([39m[38;5;252m)[39m
[38;5;252m{[39m
[38;5;252m    [39m[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"Another way to declare functions!"[39m
[38;5;252m    [39m[38;5;70;01mreturn[39;00m[38;5;252m [39m[38;5;67m0[39m
[38;5;252m}[39m
[38;5;246;03m# Call the function `bar` with no arguments:[39;00m
[38;5;252mbar[39m[38;5;252m [39m[38;5;246;03m# => Another way to declare functions![39;00m

[38;5;246;03m# Calling your function[39;00m
[38;5;252mfoo[39m[38;5;252m [39m[38;5;214m"My name is"[39m[38;5;252m [39m[38;5;87m$Name[39m

[38;5;246;03m# There are a lot of useful commands you should learn:[39;00m
[38;5;246;03m# prints last 10 lines of file.txt[39;00m
[38;5;252mtail[39m[38;5;252m [39m[38;5;252m-n[39m[38;5;252m [39m[38;5;67m10[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# prints first 10 lines of file.txt[39;00m
[38;5;252mhead[39m[38;5;252m [39m[38;5;252m-n[39m[38;5;252m [39m[38;5;67m10[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# print file.txt's lines in sorted order[39;00m
[38;5;252msort[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# report or omit repeated lines, with -d it reports them[39;00m
[38;5;252muniq[39m[38;5;252m [39m[38;5;252m-d[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# prints only the first column before the ',' character[39;00m
[38;5;252mcut[39m[38;5;252m [39m[38;5;252m-d[39m[38;5;252m [39m[38;5;214m','[39m[38;5;252m [39m[38;5;252m-f[39m[38;5;252m [39m[38;5;67m1[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# replaces every occurrence of 'okay' with 'great' in file.txt[39;00m
[38;5;246;03m# (regex compatible)[39;00m
[38;5;252msed[39m[38;5;252m [39m[38;5;252m-i[39m[38;5;252m [39m[38;5;214m's/okay/great/g'[39m[38;5;252m [39m[38;5;252mfile.txt[39m
[38;5;246;03m#Â be aware that this -i flag means that file.txt will be changed[39;00m
[38;5;246;03m#Â -i or --in-place erase the input file (use --in-place=.backup to keep a back-up)[39;00m

[38;5;246;03m# print to stdout all lines of file.txt which match some regex[39;00m
[38;5;246;03m# The example prints lines which begin with "foo" and end in "bar"[39;00m
[38;5;252mgrep[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m^foo.*bar[39m[38;5;252m$[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# pass the option "-c" to instead print the number of lines matching the regex[39;00m
[38;5;252mgrep[39m[38;5;252m [39m[38;5;252m-c[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m^foo.*bar[39m[38;5;252m$[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# Other useful options are:[39;00m
[38;5;252mgrep[39m[38;5;252m [39m[38;5;252m-r[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m^foo.*bar[39m[38;5;252m$[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252msomeDir/[39m[38;5;252m [39m[38;5;246;03m# recursively `grep`[39;00m
[38;5;252mgrep[39m[38;5;252m [39m[38;5;252m-n[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m^foo.*bar[39m[38;5;252m$[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252mfile.txt[39m[38;5;252m [39m[38;5;246;03m# give line numbers[39;00m
[38;5;252mgrep[39m[38;5;252m [39m[38;5;252m-rI[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m^foo.*bar[39m[38;5;252m$[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252msomeDir/[39m[38;5;252m [39m[38;5;246;03m# recursively `grep`, but ignore binary files[39;00m

[38;5;246;03m# perform the same initial search, but filter out the lines containing "baz"[39;00m
[38;5;252mgrep[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214m^foo.*bar[39m[38;5;252m$[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252mfile.txt[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mgrep[39m[38;5;252m [39m[38;5;252m-v[39m[38;5;252m [39m[38;5;214m"baz"[39m

[38;5;246;03m# if you literally want to search for the string,[39;00m
[38;5;246;03m# and not the regex, use `fgrep` (or `grep -F`)[39;00m
[38;5;252mfgrep[39m[38;5;252m [39m[38;5;214m"foobar"[39m[38;5;252m [39m[38;5;252mfile.txt[39m

[38;5;246;03m# The `trap` command allows you to execute a command whenever your script[39;00m
[38;5;246;03m# receives a signal. Here, `trap` will execute `rm` if it receives any of the[39;00m
[38;5;246;03m# three listed signals.[39;00m
[38;5;31mtrap[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mrm [39m[38;5;87m$TEMP_FILE[39m[38;5;214m; exit[39m[38;5;214m"[39m[38;5;252m [39m[38;5;252mSIGHUP[39m[38;5;252m [39m[38;5;252mSIGINT[39m[38;5;252m [39m[38;5;252mSIGTERM[39m

[38;5;246;03m# `sudo` is used to perform commands as the superuser[39;00m
[38;5;246;03m# usually it will ask interactively the password of superuser[39;00m
[38;5;87mNAME1[39m[38;5;252m=[39m[38;5;70;01m$([39;00m[38;5;252mwhoami[39m[38;5;70;01m)[39;00m
[38;5;87mNAME2[39m[38;5;252m=[39m[38;5;70;01m$([39;00m[38;5;252msudo[39m[38;5;252m [39m[38;5;252mwhoami[39m[38;5;70;01m)[39;00m
[38;5;31mecho[39m[38;5;252m [39m[38;5;214m"[39m[38;5;214mWas [39m[38;5;87m$NAME1[39m[38;5;214m, then became more powerful [39m[38;5;87m$NAME2[39m[38;5;214m"[39m

[38;5;246;03m# Read Bash shell built-ins documentation with the bash `help` built-in:[39;00m
[38;5;31mhelp[39m
[38;5;31mhelp[39m[38;5;252m [39m[38;5;31mhelp[39m
[38;5;31mhelp[39m[38;5;252m [39m[38;5;70;01mfor[39;00m
[38;5;31mhelp[39m[38;5;252m [39m[38;5;70;01mreturn[39;00m
[38;5;31mhelp[39m[38;5;252m [39m[38;5;31msource[39m
[38;5;31mhelp[39m[38;5;252m [39m[38;5;252m.[39m

[38;5;246;03m# Read Bash manpage documentation with `man`[39;00m
[38;5;252mapropos[39m[38;5;252m [39m[38;5;252mbash[39m
[38;5;252mman[39m[38;5;252m [39m[38;5;67m1[39m[38;5;252m [39m[38;5;252mbash[39m
[38;5;252mman[39m[38;5;252m [39m[38;5;252mbash[39m

[38;5;246;03m# Read info documentation with `info` (`?` for help)[39;00m
[38;5;252mapropos[39m[38;5;252m [39m[38;5;252minfo[39m[38;5;252m [39m[38;5;252m|[39m[38;5;252m [39m[38;5;252mgrep[39m[38;5;252m [39m[38;5;214m'^info.*('[39m
[38;5;252mman[39m[38;5;252m [39m[38;5;252minfo[39m
[38;5;252minfo[39m[38;5;252m [39m[38;5;252minfo[39m
[38;5;252minfo[39m[38;5;252m [39m[38;5;67m5[39m[38;5;252m [39m[38;5;252minfo[39m

[38;5;246;03m# Read bash info documentation:[39;00m
[38;5;252minfo[39m[38;5;252m [39m[38;5;252mbash[39m
[38;5;252minfo[39m[38;5;252m [39m[38;5;252mbash[39m[38;5;252m [39m[38;5;214m'Bash Features'[39m
[38;5;252minfo[39m[38;5;252m [39m[38;5;252mbash[39m[38;5;252m [39m[38;5;67m6[39m
[38;5;252minfo[39m[38;5;252m [39m[38;5;252m--apropos[39m[38;5;252m [39m[38;5;252mbash[39m
